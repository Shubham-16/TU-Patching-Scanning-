---

- name: Get the authentication token from ManageEngine
  uri:
    url: "https://{{ manageengine_server }}/api/1.3/desktop/authentication?username={{ user }}&password={{ pass|b64encode }}&auth_type=local_authentication"
    method: GET
    validate_certs: no
  register: token

- set_fact: 
    json_data: "{{lookup('file', '/tmp/patch.json') }}"

- name: Get the patch ID of the selected patches
  set_fact:
     patch_ids: "{{ patch_ids + [ item.key | int ] }}"
  when: item.value in patch_list
  with_dict: "{{ json_data.patches }}"

- import_tasks: fetch_servers_based_on_patch.yml
  loop: "{{ patch_ids }}"

- name: Print all the servers for which the patch is applicable
  debug:
     msg: "Server Name : {{ server_name }}"

- name: Copy the name and ID of all the applicable servers into a file
  copy: 
      content: "{ 'serverList': {{ servers }} , 'patchID_list': {{ patch_ids }} }"
      dest: /tmp/server.json

- set_fact: 
     server_data: "{{lookup('file', '/tmp/server.json') }}"

- debug: 
     msg: "Server Data : - {{ server_data }}"

- name: fetch all deployment policies 
  uri:
    url: "https://{{ manageengine_server }}/api/1.3/patch/deploymentpolicies"
    headers:
       Authorization: "{{ token.json.message_response.authentication.auth_data.auth_token }}"
    method: GET
    validate_certs: no
  register: dp

- name: print deployment policies list
  debug:
     msg: "{{ dp }}"

- name: Filter Out deploymnet policies name and add it to list
  set_fact:
     deployment_policies: "{{ deployment_policies + [item.template_name] }}"
  loop: "{{dp.json.message_response.deploymentpolicies}}"

- name: print deployment policies list
  debug:
     msg: "{{ deployment_policies }}"

- name: Create Survey vars 
  uri:
    url: "https://{{ lookup('env', 'TOWER_HOST') }}/api/v2/workflow_job_templates/{{ manageEngine_workflow_template_id }}/survey_spec/"
    method: POST
    user: "{{ lookup('env', 'TOWER_USERNAME') }}"
    password: "{{ lookup('env', 'TOWER_PASSWORD') }}"
    body_format: json
    body: "{{ survey_body }}"
    force_basic_auth: yes
    validate_certs: no
    return_content: yes
    status_code: 200
    